// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.32.0
// source: attribute.proto

package pb

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	AttributeService_SetAttributes_FullMethodName       = "/pb.AttributeService/SetAttributes"
	AttributeService_GetAttributes_FullMethodName       = "/pb.AttributeService/GetAttributes"
	AttributeService_DeleteAttributes_FullMethodName    = "/pb.AttributeService/DeleteAttributes"
	AttributeService_ListAttributes_FullMethodName      = "/pb.AttributeService/ListAttributes"
	AttributeService_GetAttributeHistory_FullMethodName = "/pb.AttributeService/GetAttributeHistory"
	AttributeService_BulkSetAttributes_FullMethodName   = "/pb.AttributeService/BulkSetAttributes"
	AttributeService_SearchAttributes_FullMethodName    = "/pb.AttributeService/SearchAttributes"
)

// AttributeServiceClient is the client API for AttributeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Attribute Service - manages attributes for ABAC
type AttributeServiceClient interface {
	SetAttributes(ctx context.Context, in *SetAttributesRequest, opts ...grpc.CallOption) (*SetAttributesResponse, error)
	GetAttributes(ctx context.Context, in *GetAttributesRequest, opts ...grpc.CallOption) (*GetAttributesResponse, error)
	DeleteAttributes(ctx context.Context, in *DeleteAttributesRequest, opts ...grpc.CallOption) (*DeleteAttributesResponse, error)
	ListAttributes(ctx context.Context, in *ListAttributesRequest, opts ...grpc.CallOption) (*ListAttributesResponse, error)
	GetAttributeHistory(ctx context.Context, in *GetAttributeHistoryRequest, opts ...grpc.CallOption) (*GetAttributeHistoryResponse, error)
	BulkSetAttributes(ctx context.Context, in *BulkSetAttributesRequest, opts ...grpc.CallOption) (*BulkSetAttributesResponse, error)
	SearchAttributes(ctx context.Context, in *SearchAttributesRequest, opts ...grpc.CallOption) (*SearchAttributesResponse, error)
}

type attributeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAttributeServiceClient(cc grpc.ClientConnInterface) AttributeServiceClient {
	return &attributeServiceClient{cc}
}

func (c *attributeServiceClient) SetAttributes(ctx context.Context, in *SetAttributesRequest, opts ...grpc.CallOption) (*SetAttributesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SetAttributesResponse)
	err := c.cc.Invoke(ctx, AttributeService_SetAttributes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeServiceClient) GetAttributes(ctx context.Context, in *GetAttributesRequest, opts ...grpc.CallOption) (*GetAttributesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAttributesResponse)
	err := c.cc.Invoke(ctx, AttributeService_GetAttributes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeServiceClient) DeleteAttributes(ctx context.Context, in *DeleteAttributesRequest, opts ...grpc.CallOption) (*DeleteAttributesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteAttributesResponse)
	err := c.cc.Invoke(ctx, AttributeService_DeleteAttributes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeServiceClient) ListAttributes(ctx context.Context, in *ListAttributesRequest, opts ...grpc.CallOption) (*ListAttributesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListAttributesResponse)
	err := c.cc.Invoke(ctx, AttributeService_ListAttributes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeServiceClient) GetAttributeHistory(ctx context.Context, in *GetAttributeHistoryRequest, opts ...grpc.CallOption) (*GetAttributeHistoryResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetAttributeHistoryResponse)
	err := c.cc.Invoke(ctx, AttributeService_GetAttributeHistory_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeServiceClient) BulkSetAttributes(ctx context.Context, in *BulkSetAttributesRequest, opts ...grpc.CallOption) (*BulkSetAttributesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(BulkSetAttributesResponse)
	err := c.cc.Invoke(ctx, AttributeService_BulkSetAttributes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeServiceClient) SearchAttributes(ctx context.Context, in *SearchAttributesRequest, opts ...grpc.CallOption) (*SearchAttributesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SearchAttributesResponse)
	err := c.cc.Invoke(ctx, AttributeService_SearchAttributes_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AttributeServiceServer is the server API for AttributeService service.
// All implementations must embed UnimplementedAttributeServiceServer
// for forward compatibility.
//
// Attribute Service - manages attributes for ABAC
type AttributeServiceServer interface {
	SetAttributes(context.Context, *SetAttributesRequest) (*SetAttributesResponse, error)
	GetAttributes(context.Context, *GetAttributesRequest) (*GetAttributesResponse, error)
	DeleteAttributes(context.Context, *DeleteAttributesRequest) (*DeleteAttributesResponse, error)
	ListAttributes(context.Context, *ListAttributesRequest) (*ListAttributesResponse, error)
	GetAttributeHistory(context.Context, *GetAttributeHistoryRequest) (*GetAttributeHistoryResponse, error)
	BulkSetAttributes(context.Context, *BulkSetAttributesRequest) (*BulkSetAttributesResponse, error)
	SearchAttributes(context.Context, *SearchAttributesRequest) (*SearchAttributesResponse, error)
	mustEmbedUnimplementedAttributeServiceServer()
}

// UnimplementedAttributeServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedAttributeServiceServer struct{}

func (UnimplementedAttributeServiceServer) SetAttributes(context.Context, *SetAttributesRequest) (*SetAttributesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAttributes not implemented")
}
func (UnimplementedAttributeServiceServer) GetAttributes(context.Context, *GetAttributesRequest) (*GetAttributesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAttributes not implemented")
}
func (UnimplementedAttributeServiceServer) DeleteAttributes(context.Context, *DeleteAttributesRequest) (*DeleteAttributesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAttributes not implemented")
}
func (UnimplementedAttributeServiceServer) ListAttributes(context.Context, *ListAttributesRequest) (*ListAttributesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAttributes not implemented")
}
func (UnimplementedAttributeServiceServer) GetAttributeHistory(context.Context, *GetAttributeHistoryRequest) (*GetAttributeHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAttributeHistory not implemented")
}
func (UnimplementedAttributeServiceServer) BulkSetAttributes(context.Context, *BulkSetAttributesRequest) (*BulkSetAttributesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BulkSetAttributes not implemented")
}
func (UnimplementedAttributeServiceServer) SearchAttributes(context.Context, *SearchAttributesRequest) (*SearchAttributesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchAttributes not implemented")
}
func (UnimplementedAttributeServiceServer) mustEmbedUnimplementedAttributeServiceServer() {}
func (UnimplementedAttributeServiceServer) testEmbeddedByValue()                          {}

// UnsafeAttributeServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AttributeServiceServer will
// result in compilation errors.
type UnsafeAttributeServiceServer interface {
	mustEmbedUnimplementedAttributeServiceServer()
}

func RegisterAttributeServiceServer(s grpc.ServiceRegistrar, srv AttributeServiceServer) {
	// If the following call pancis, it indicates UnimplementedAttributeServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&AttributeService_ServiceDesc, srv)
}

func _AttributeService_SetAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAttributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributeServiceServer).SetAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributeService_SetAttributes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributeServiceServer).SetAttributes(ctx, req.(*SetAttributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributeService_GetAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAttributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributeServiceServer).GetAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributeService_GetAttributes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributeServiceServer).GetAttributes(ctx, req.(*GetAttributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributeService_DeleteAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAttributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributeServiceServer).DeleteAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributeService_DeleteAttributes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributeServiceServer).DeleteAttributes(ctx, req.(*DeleteAttributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributeService_ListAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAttributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributeServiceServer).ListAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributeService_ListAttributes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributeServiceServer).ListAttributes(ctx, req.(*ListAttributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributeService_GetAttributeHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAttributeHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributeServiceServer).GetAttributeHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributeService_GetAttributeHistory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributeServiceServer).GetAttributeHistory(ctx, req.(*GetAttributeHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributeService_BulkSetAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BulkSetAttributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributeServiceServer).BulkSetAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributeService_BulkSetAttributes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributeServiceServer).BulkSetAttributes(ctx, req.(*BulkSetAttributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributeService_SearchAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchAttributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributeServiceServer).SearchAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributeService_SearchAttributes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributeServiceServer).SearchAttributes(ctx, req.(*SearchAttributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AttributeService_ServiceDesc is the grpc.ServiceDesc for AttributeService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AttributeService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.AttributeService",
	HandlerType: (*AttributeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetAttributes",
			Handler:    _AttributeService_SetAttributes_Handler,
		},
		{
			MethodName: "GetAttributes",
			Handler:    _AttributeService_GetAttributes_Handler,
		},
		{
			MethodName: "DeleteAttributes",
			Handler:    _AttributeService_DeleteAttributes_Handler,
		},
		{
			MethodName: "ListAttributes",
			Handler:    _AttributeService_ListAttributes_Handler,
		},
		{
			MethodName: "GetAttributeHistory",
			Handler:    _AttributeService_GetAttributeHistory_Handler,
		},
		{
			MethodName: "BulkSetAttributes",
			Handler:    _AttributeService_BulkSetAttributes_Handler,
		},
		{
			MethodName: "SearchAttributes",
			Handler:    _AttributeService_SearchAttributes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "attribute.proto",
}
