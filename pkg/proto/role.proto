syntax = "proto3";

package pb;

option go_package = "github.com/Kisanlink/aaa-service/v2/pkg/proto;pb";

import "google/protobuf/timestamp.proto";

// Assign role to user in organization context
message AssignRoleRequest {
    string user_id = 1;
    string org_id = 2;
    string role_name = 3;
}

message AssignRoleResponse {
    int32 status_code = 1;
    string message = 2;
}

// Check if user has specific role
message CheckUserRoleRequest {
    string user_id = 1;
    string role_name = 2;
    string org_id = 3;  // optional - check in specific org
}

message CheckUserRoleResponse {
    bool has_role = 1;
    string org_id = 2;  // organization where role was found
}

// Remove role from user
message RemoveRoleRequest {
    string user_id = 1;
    string org_id = 2;
    string role_name = 3;
}

message RemoveRoleResponse {
    int32 status_code = 1;
    string message = 2;
}

// Get all roles for a user
message GetUserRolesRequest {
    string user_id = 1;
    string org_id = 2;  // optional filter by org
}

message RoleAssignment {
    string role_name = 1;
    string org_id = 2;
    string org_name = 3;
    google.protobuf.Timestamp assigned_at = 4;
}

message GetUserRolesResponse {
    int32 status_code = 1;
    string message = 2;
    repeated RoleAssignment roles = 3;
}

// List all users with a specific role
message ListUsersWithRoleRequest {
    string role_name = 1;
    string org_id = 2;
    int32 page = 3;
    int32 page_size = 4;
}

message UserSummary {
    string id = 1;
    string username = 2;
    string phone_number = 3;
}

message ListUsersWithRoleResponse {
    int32 status_code = 1;
    string message = 2;
    repeated UserSummary users = 3;
    int32 total_count = 4;
}

// RoleService - manages user role assignments
service RoleService {
    rpc AssignRole(AssignRoleRequest) returns (AssignRoleResponse);
    rpc CheckUserRole(CheckUserRoleRequest) returns (CheckUserRoleResponse);
    rpc RemoveRole(RemoveRoleRequest) returns (RemoveRoleResponse);
    rpc GetUserRoles(GetUserRolesRequest) returns (GetUserRolesResponse);
    rpc ListUsersWithRole(ListUsersWithRoleRequest) returns (ListUsersWithRoleResponse);
}
