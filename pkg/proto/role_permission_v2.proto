syntax = "proto3";

package role_permission_v2;

option go_package = "github.com/Kisanlink/aaa-service/pb";

// V2 Role model with enhanced fields
message RoleV2 {
    string id = 1;
    string name = 2;
    string description = 3;
    string status = 4;
    string created_at = 5;
    string updated_at = 6;
    repeated string permissions = 7;
    repeated string child_roles = 8;
    string parent_role_id = 9;
    int32 hierarchy_level = 10;
}

// V2 Permission model with enhanced fields
message PermissionV2 {
    string id = 1;
    string name = 2;
    string description = 3;
    string resource = 4;
    string effect = 5;
    repeated string actions = 6;
    string status = 7;
    string created_at = 8;
    string updated_at = 9;
}

// V2 Role-Permission Connection model
message RolePermissionConnectionV2 {
    string id = 1;
    string role_id = 2;
    string permission_id = 3;
    string created_at = 4;
    string updated_at = 5;
    RoleV2 role = 6;
    PermissionV2 permission = 7;
}

// V2 Create Role Request
message CreateRoleRequestV2 {
    string name = 1;
    string description = 2;
    string parent_role_id = 3;
    repeated string permission_ids = 4;
}

// V2 Create Role Response
message CreateRoleResponseV2 {
    int32 status_code = 1;
    string message = 2;
    RoleV2 role = 3;
}

// V2 Get Role Request
message GetRoleRequestV2 {
    string id = 1;
    bool include_permissions = 2;
    bool include_child_roles = 3;
}

// V2 Get Role Response
message GetRoleResponseV2 {
    int32 status_code = 1;
    string message = 2;
    RoleV2 role = 3;
}

// V2 Get All Roles Request
message GetAllRolesRequestV2 {
    int32 page = 1;
    int32 per_page = 2;
    string search = 3;
    string status = 4;
    string parent_role_id = 5;
    bool include_permissions = 6;
}

// V2 Get All Roles Response
message GetAllRolesResponseV2 {
    int32 status_code = 1;
    string message = 2;
    repeated RoleV2 roles = 3;
    int32 total_count = 4;
    int32 page = 5;
    int32 per_page = 6;
}

// V2 Update Role Request
message UpdateRoleRequestV2 {
    string id = 1;
    string name = 2;
    string description = 3;
    string status = 4;
    string parent_role_id = 5;
    repeated string permission_ids = 6;
}

// V2 Update Role Response
message UpdateRoleResponseV2 {
    int32 status_code = 1;
    string message = 2;
    RoleV2 role = 3;
}

// V2 Delete Role Request
message DeleteRoleRequestV2 {
    string id = 1;
    bool cascade = 2;
}

// V2 Delete Role Response
message DeleteRoleResponseV2 {
    int32 status_code = 1;
    string message = 2;
}

// V2 Create Permission Request
message CreatePermissionRequestV2 {
    string name = 1;
    string description = 2;
    string resource = 3;
    string effect = 4;
    repeated string actions = 5;
}

// V2 Create Permission Response
message CreatePermissionResponseV2 {
    int32 status_code = 1;
    string message = 2;
    PermissionV2 permission = 3;
}

// V2 Get Permission Request
message GetPermissionRequestV2 {
    string id = 1;
}

// V2 Get Permission Response
message GetPermissionResponseV2 {
    int32 status_code = 1;
    string message = 2;
    PermissionV2 permission = 3;
}

// V2 Get All Permissions Request
message GetAllPermissionsRequestV2 {
    int32 page = 1;
    int32 per_page = 2;
    string search = 3;
    string resource = 4;
    string effect = 5;
}

// V2 Get All Permissions Response
message GetAllPermissionsResponseV2 {
    int32 status_code = 1;
    string message = 2;
    repeated PermissionV2 permissions = 3;
    int32 total_count = 4;
    int32 page = 5;
    int32 per_page = 6;
}

// V2 Update Permission Request
message UpdatePermissionRequestV2 {
    string id = 1;
    string name = 2;
    string description = 3;
    string resource = 4;
    string effect = 5;
    repeated string actions = 6;
    string status = 7;
}

// V2 Update Permission Response
message UpdatePermissionResponseV2 {
    int32 status_code = 1;
    string message = 2;
    PermissionV2 permission = 3;
}

// V2 Delete Permission Request
message DeletePermissionRequestV2 {
    string id = 1;
}

// V2 Delete Permission Response
message DeletePermissionResponseV2 {
    int32 status_code = 1;
    string message = 2;
}

// V2 Assign Permission to Role Request
message AssignPermissionToRoleRequestV2 {
    string role_id = 1;
    string permission_id = 2;
}

// V2 Assign Permission to Role Response
message AssignPermissionToRoleResponseV2 {
    int32 status_code = 1;
    string message = 2;
    RolePermissionConnectionV2 connection = 3;
}

// V2 Remove Permission from Role Request
message RemovePermissionFromRoleRequestV2 {
    string role_id = 1;
    string permission_id = 2;
}

// V2 Remove Permission from Role Response
message RemovePermissionFromRoleResponseV2 {
    int32 status_code = 1;
    string message = 2;
}

// V2 Get Role Permissions Request
message GetRolePermissionsRequestV2 {
    string role_id = 1;
}

// V2 Get Role Permissions Response
message GetRolePermissionsResponseV2 {
    int32 status_code = 1;
    string message = 2;
    repeated PermissionV2 permissions = 3;
}

// V2 Evaluate Permission Request
message EvaluatePermissionRequestV2 {
    string user_id = 1;
    string resource = 2;
    string action = 3;
}

// V2 Evaluate Permission Response
message EvaluatePermissionResponseV2 {
    int32 status_code = 1;
    string message = 2;
    bool allowed = 3;
    repeated string permissions = 4;
}

// V2 Role Service
service RoleServiceV2 {
    rpc CreateRole(CreateRoleRequestV2) returns (CreateRoleResponseV2);
    rpc GetRole(GetRoleRequestV2) returns (GetRoleResponseV2);
    rpc GetAllRoles(GetAllRolesRequestV2) returns (GetAllRolesResponseV2);
    rpc UpdateRole(UpdateRoleRequestV2) returns (UpdateRoleResponseV2);
    rpc DeleteRole(DeleteRoleRequestV2) returns (DeleteRoleResponseV2);
    rpc AssignPermissionToRole(AssignPermissionToRoleRequestV2) returns (AssignPermissionToRoleResponseV2);
    rpc RemovePermissionFromRole(RemovePermissionFromRoleRequestV2) returns (RemovePermissionFromRoleResponseV2);
    rpc GetRolePermissions(GetRolePermissionsRequestV2) returns (GetRolePermissionsResponseV2);
}

// V2 Permission Service
service PermissionServiceV2 {
    rpc CreatePermission(CreatePermissionRequestV2) returns (CreatePermissionResponseV2);
    rpc GetPermission(GetPermissionRequestV2) returns (GetPermissionResponseV2);
    rpc GetAllPermissions(GetAllPermissionsRequestV2) returns (GetAllPermissionsResponseV2);
    rpc UpdatePermission(UpdatePermissionRequestV2) returns (UpdatePermissionResponseV2);
    rpc DeletePermission(DeletePermissionRequestV2) returns (DeletePermissionResponseV2);
    rpc EvaluatePermission(EvaluatePermissionRequestV2) returns (EvaluatePermissionResponseV2);
}
