services:
  aaa-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aaa-service-v2
    ports:
      - "8080:8080"
      - "50051:50051"  # gRPC port
    environment:
      - HTTP_PORT=8080
      - GRPC_PORT=50051
      - DB_PRIMARY_BACKEND=gorm
      - DB_POSTGRES_HOST=${DB_POSTGRES_HOST:-postgres}
      - DB_POSTGRES_PORT=${DB_POSTGRES_PORT:-5432}
      - DB_POSTGRES_USER=${DB_POSTGRES_USER:-aaa_user}
      - DB_POSTGRES_PASSWORD=${DB_POSTGRES_PASSWORD:-aaa_password}
      - DB_POSTGRES_DBNAME=${DB_POSTGRES_DBNAME:-aaa_service}
      - DB_POSTGRES_SSLMODE=${DB_SSL_MODE:-disable}
      - DB_POSTGRES_MAX_CONNS=10
      - DB_POSTGRES_IDLE_CONNS=5
      - DATABASE_URL=postgres://${DB_POSTGRES_USER:-aaa_user}:${DB_POSTGRES_PASSWORD:-aaa_password}@postgres:5432/${DB_POSTGRES_DBNAME:-aaa_service}?sslmode=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-key-here}
      - LOG_LEVEL=info
      - AAA_RUN_SEED=${AAA_RUN_SEED:-true}
      - AAA_ENABLE_DOCS=${AAA_ENABLE_DOCS:-true}
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - aaa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: aaa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aaa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:17-alpine
    container_name: aaa-postgres
    environment:
      - POSTGRES_DB=${DB_POSTGRES_DBNAME:-aaa_service}
      - POSTGRES_USER=${DB_POSTGRES_USER:-aaa_user}
      - POSTGRES_PASSWORD=${DB_POSTGRES_PASSWORD:-aaa_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - aaa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_POSTGRES_USER:-aaa_user} -d ${DB_POSTGRES_DBNAME:-aaa_service}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  redis_data:
  postgres_data:

networks:
  aaa-network:
    driver: bridge
