services:
  aaa-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aaa-service-v2
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DB_PRIMARY_BACKEND=gorm
      - DB_POSTGRES_HOST=${DB_POSTGRES_HOST:-localhost}
      - DB_POSTGRES_PORT=${DB_POSTGRES_PORT:-5432}
      - DB_POSTGRES_USER=${DB_POSTGRES_USER:-aaa_user}
      - DB_POSTGRES_PASSWORD=${DB_POSTGRES_PASSWORD:-aaa_password}
      - DB_POSTGRES_DBNAME=${DB_POSTGRES_DBNAME:-aaa_service}
      - DB_POSTGRES_SSLMODE=${DB_SSL_MODE:-disable}
      - DB_POSTGRES_MAX_CONNS=10
      - DB_POSTGRES_IDLE_CONNS=5
      - DB_SPICEDB_ENDPOINT=spicedb:50051
      - DB_SPICEDB_TOKEN=${DB_SPICEDB_TOKEN:-your-secret-key-here}
      - SPICEDB_DB_NAME=${SPICEDB_DB_NAME:-spicedb}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=info
    depends_on:
      redis:
        condition: service_healthy
      spicedb:
        condition: service_healthy
    networks:
      - aaa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: aaa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aaa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  spicedb-migrate:
    image: authzed/spicedb:latest
    container_name: aaa-spicedb-migrate
    environment:
      - SPICEDB_DATASTORE_ENGINE=postgres
      - SPICEDB_DATASTORE_CONN_URI=postgres://${SPICEDB_PG_USER:-spicedb}:${SPICEDB_PG_PASSWORD:-spicedb}@postgres17:5432/${SPICEDB_DB_NAME:-spicedb}?sslmode=disable
    command: ["migrate", "head"]
    networks:
      - aaa-network
    restart: "no"
    depends_on:
      postgres17:
        condition: service_healthy

  spicedb:
    image: authzed/spicedb:latest
    container_name: aaa-spicedb
    ports:
      - "50051:50051"
    environment:
      - SPICEDB_LOG_LEVEL=info
      - SPICEDB_GRPC_PRESHARED_KEY=${DB_SPICEDB_TOKEN:-your-secret-key-here}
      - SPICEDB_DATASTORE_ENGINE=postgres
      - SPICEDB_DATASTORE_CONN_URI=postgres://${SPICEDB_PG_USER:-spicedb}:${SPICEDB_PG_PASSWORD:-spicedb}@postgres17:5432/${SPICEDB_DB_NAME:-spicedb}?sslmode=disable
    command: ["serve", "--log-level", "info"]
    networks:
      - aaa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=localhost:50051"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      spicedb-migrate:
        condition: service_completed_successfully
      postgres17:
        condition: service_healthy

  postgres17:
    image: postgres:17-alpine
    container_name: aaa-spicedb-postgres17
    environment:
      - POSTGRES_DB=${SPICEDB_DB_NAME:-spicedb}
      - POSTGRES_USER=${SPICEDB_PG_USER:-spicedb}
      - POSTGRES_PASSWORD=${SPICEDB_PG_PASSWORD:-spicedb}
    ports:
      - "55432:5432"
    volumes:
      - spicedb_pg_data:/var/lib/postgresql/data
    networks:
      - aaa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SPICEDB_PG_USER:-spicedb} -d ${SPICEDB_DB_NAME:-spicedb}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  redis_data:
  spicedb_pg_data:

networks:
  aaa-network:
    driver: bridge
