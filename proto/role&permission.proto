syntax = "proto3";

package role_permission;

import "google/protobuf/any.proto"; // Import the Any type

option go_package = "github.com/Kisanlink/aaa-service/pb";

// Base message definition (optional, if you want to reuse fields like ID, createdAt, updatedAt)
message Base {
    string id = 1;          // UUID as string
    string created_at = 2;  // ISO 8601 timestamp
    string updated_at = 3;  // ISO 8601 timestamp
}

// Role and Permission message definitions remain unchanged
message Role {
    string id = 1;          // Primary key (UUID as string)
    string name = 2;        // Unique name
    string description = 3; // Optional description
}

message Permission {
    string id = 1;          // Primary key (UUID as string)
    string name = 2;        // Unique name
    string description = 3; // Optional description
}

message GenericResponseOK {
    int32 status_code = 1;  // HTTP status code equivalent
    string message = 2;     // Response message
    google.protobuf.Any data = 3; // Dynamic data field
}
message GenericResponseCreated {
    int32 status_code = 1;  // HTTP status code equivalent
    string message = 2;     // Response message
    google.protobuf.Any data = 3; // Dynamic data field
}

// Request messages for Role CRUD operations
message CreateRoleRequest {
    string name = 1;        // Unique name
    string description = 2; // Optional description
}

message GetAllRolesRequest {}

message GetRoleByIdRequest {
    string id = 1;          // Role ID (UUID as string)
}

message UpdateRoleRequest {
    Role role = 1;          // Role object with updated fields
}

message DeleteRoleRequest {
    string id = 1;          // Role ID (UUID as string)
}

// Request messages for Permission CRUD operations
message CreatePermissionRequest {
    string name = 1;        // Unique name
    string description = 2; // Optional description
}

message GetAllPermissionsRequest {}

message GetPermissionByIdRequest {
    string id = 1;          // Permission ID (UUID as string)
}

message UpdatePermissionRequest {
    Permission permission = 1; // Permission object with updated fields
}

message DeletePermissionRequest {
    string id = 1;          // Permission ID (UUID as string)
}

// Service definitions
service RoleService {
    rpc CreateRole(CreateRoleRequest) returns (GenericResponse);
    rpc GetAllRoles(GetAllRolesRequest) returns (GenericResponse);
    rpc GetRoleById(GetRoleByIdRequest) returns (GenericResponse);
    rpc UpdateRole(UpdateRoleRequest) returns (GenericResponse);
    rpc DeleteRole(DeleteRoleRequest) returns (GenericResponse);
}

service PermissionService {
    rpc CreatePermission(CreatePermissionRequest) returns (GenericResponse);
    rpc GetAllPermissions(GetAllPermissionsRequest) returns (GenericResponse);
    rpc GetPermissionById(GetPermissionByIdRequest) returns (GenericResponse);
    rpc UpdatePermission(UpdatePermissionRequest) returns (GenericResponse);
    rpc DeletePermission(DeletePermissionRequest) returns (GenericResponse);
}