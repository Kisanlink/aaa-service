// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.1
// source: connectRolePermission.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnUser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Username      string                 `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	IsValidated   bool                   `protobuf:"varint,6,opt,name=is_validated,json=isValidated,proto3" json:"is_validated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnUser) Reset() {
	*x = ConnUser{}
	mi := &file_connectRolePermission_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnUser) ProtoMessage() {}

func (x *ConnUser) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnUser.ProtoReflect.Descriptor instead.
func (*ConnUser) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{0}
}

func (x *ConnUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnUser) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ConnUser) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ConnUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ConnUser) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ConnUser) GetIsValidated() bool {
	if x != nil {
		return x.IsValidated
	}
	return false
}

type ConnRole struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnRole) Reset() {
	*x = ConnRole{}
	mi := &file_connectRolePermission_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnRole) ProtoMessage() {}

func (x *ConnRole) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnRole.ProtoReflect.Descriptor instead.
func (*ConnRole) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{1}
}

func (x *ConnRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnRole) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnRole) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ConnPermission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnPermission) Reset() {
	*x = ConnPermission{}
	mi := &file_connectRolePermission_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnPermission) ProtoMessage() {}

func (x *ConnPermission) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnPermission.ProtoReflect.Descriptor instead.
func (*ConnPermission) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{2}
}

func (x *ConnPermission) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnPermission) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnPermission) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ConnPermissionOnRole struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Permission    *ConnPermission        `protobuf:"bytes,4,opt,name=permission,proto3" json:"permission,omitempty"`
	UserRoleId    string                 `protobuf:"bytes,5,opt,name=user_role_id,json=userRoleId,proto3" json:"user_role_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnPermissionOnRole) Reset() {
	*x = ConnPermissionOnRole{}
	mi := &file_connectRolePermission_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnPermissionOnRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnPermissionOnRole) ProtoMessage() {}

func (x *ConnPermissionOnRole) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnPermissionOnRole.ProtoReflect.Descriptor instead.
func (*ConnPermissionOnRole) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{3}
}

func (x *ConnPermissionOnRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnPermissionOnRole) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ConnPermissionOnRole) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ConnPermissionOnRole) GetPermission() *ConnPermission {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *ConnPermissionOnRole) GetUserRoleId() string {
	if x != nil {
		return x.UserRoleId
	}
	return ""
}

type ConnUserRole struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt        string                 `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        string                 `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	User             *ConnUser              `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	RolePermissionId string                 `protobuf:"bytes,5,opt,name=role_permission_id,json=rolePermissionId,proto3" json:"role_permission_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConnUserRole) Reset() {
	*x = ConnUserRole{}
	mi := &file_connectRolePermission_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnUserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnUserRole) ProtoMessage() {}

func (x *ConnUserRole) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnUserRole.ProtoReflect.Descriptor instead.
func (*ConnUserRole) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{4}
}

func (x *ConnUserRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnUserRole) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ConnUserRole) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ConnUserRole) GetUser() *ConnUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ConnUserRole) GetRolePermissionId() string {
	if x != nil {
		return x.RolePermissionId
	}
	return ""
}

type ConnRolePermission struct {
	state             protoimpl.MessageState  `protogen:"open.v1"`
	Id                string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt         string                  `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         string                  `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Role              *ConnRole               `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	PermissionOnRoles []*ConnPermissionOnRole `protobuf:"bytes,5,rep,name=permission_on_roles,json=permissionOnRoles,proto3" json:"permission_on_roles,omitempty"`
	UserRoles         []*ConnUserRole         `protobuf:"bytes,6,rep,name=user_roles,json=userRoles,proto3" json:"user_roles,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ConnRolePermission) Reset() {
	*x = ConnRolePermission{}
	mi := &file_connectRolePermission_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnRolePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnRolePermission) ProtoMessage() {}

func (x *ConnRolePermission) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnRolePermission.ProtoReflect.Descriptor instead.
func (*ConnRolePermission) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{5}
}

func (x *ConnRolePermission) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnRolePermission) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ConnRolePermission) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ConnRolePermission) GetRole() *ConnRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *ConnRolePermission) GetPermissionOnRoles() []*ConnPermissionOnRole {
	if x != nil {
		return x.PermissionOnRoles
	}
	return nil
}

func (x *ConnRolePermission) GetUserRoles() []*ConnUserRole {
	if x != nil {
		return x.UserRoles
	}
	return nil
}

type CreateConnRolePermissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoleIds       []string               `protobuf:"bytes,1,rep,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	PermissionIds []string               `protobuf:"bytes,2,rep,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConnRolePermissionRequest) Reset() {
	*x = CreateConnRolePermissionRequest{}
	mi := &file_connectRolePermission_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConnRolePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnRolePermissionRequest) ProtoMessage() {}

func (x *CreateConnRolePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnRolePermissionRequest.ProtoReflect.Descriptor instead.
func (*CreateConnRolePermissionRequest) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{6}
}

func (x *CreateConnRolePermissionRequest) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *CreateConnRolePermissionRequest) GetPermissionIds() []string {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

type CreateConnRolePermissionResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	StatusCode         int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Message            string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ConnRolePermission *ConnRolePermission    `protobuf:"bytes,3,opt,name=conn_role_permission,json=connRolePermission,proto3" json:"conn_role_permission,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CreateConnRolePermissionResponse) Reset() {
	*x = CreateConnRolePermissionResponse{}
	mi := &file_connectRolePermission_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConnRolePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnRolePermissionResponse) ProtoMessage() {}

func (x *CreateConnRolePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnRolePermissionResponse.ProtoReflect.Descriptor instead.
func (*CreateConnRolePermissionResponse) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{7}
}

func (x *CreateConnRolePermissionResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CreateConnRolePermissionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateConnRolePermissionResponse) GetConnRolePermission() *ConnRolePermission {
	if x != nil {
		return x.ConnRolePermission
	}
	return nil
}

type GetConnRolePermissionallRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConnRolePermissionallRequest) Reset() {
	*x = GetConnRolePermissionallRequest{}
	mi := &file_connectRolePermission_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnRolePermissionallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnRolePermissionallRequest) ProtoMessage() {}

func (x *GetConnRolePermissionallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnRolePermissionallRequest.ProtoReflect.Descriptor instead.
func (*GetConnRolePermissionallRequest) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{8}
}

type GetConnRolePermissionallResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	StatusCode         int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Message            string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ConnRolePermission []*ConnRolePermission  `protobuf:"bytes,3,rep,name=conn_role_permission,json=connRolePermission,proto3" json:"conn_role_permission,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetConnRolePermissionallResponse) Reset() {
	*x = GetConnRolePermissionallResponse{}
	mi := &file_connectRolePermission_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnRolePermissionallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnRolePermissionallResponse) ProtoMessage() {}

func (x *GetConnRolePermissionallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnRolePermissionallResponse.ProtoReflect.Descriptor instead.
func (*GetConnRolePermissionallResponse) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{9}
}

func (x *GetConnRolePermissionallResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetConnRolePermissionallResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetConnRolePermissionallResponse) GetConnRolePermission() []*ConnRolePermission {
	if x != nil {
		return x.ConnRolePermission
	}
	return nil
}

type GetConnRolePermissionByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConnRolePermissionByIdRequest) Reset() {
	*x = GetConnRolePermissionByIdRequest{}
	mi := &file_connectRolePermission_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnRolePermissionByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnRolePermissionByIdRequest) ProtoMessage() {}

func (x *GetConnRolePermissionByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnRolePermissionByIdRequest.ProtoReflect.Descriptor instead.
func (*GetConnRolePermissionByIdRequest) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{10}
}

func (x *GetConnRolePermissionByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetConnRolePermissionByIdResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	StatusCode         int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Message            string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ConnRolePermission *ConnRolePermission    `protobuf:"bytes,3,opt,name=conn_role_permission,json=connRolePermission,proto3" json:"conn_role_permission,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetConnRolePermissionByIdResponse) Reset() {
	*x = GetConnRolePermissionByIdResponse{}
	mi := &file_connectRolePermission_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConnRolePermissionByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnRolePermissionByIdResponse) ProtoMessage() {}

func (x *GetConnRolePermissionByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnRolePermissionByIdResponse.ProtoReflect.Descriptor instead.
func (*GetConnRolePermissionByIdResponse) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{11}
}

func (x *GetConnRolePermissionByIdResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetConnRolePermissionByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetConnRolePermissionByIdResponse) GetConnRolePermission() *ConnRolePermission {
	if x != nil {
		return x.ConnRolePermission
	}
	return nil
}

type UpdateConnRolePermissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoleIds       []string               `protobuf:"bytes,2,rep,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	PermissionIds []string               `protobuf:"bytes,3,rep,name=permission_ids,json=permissionIds,proto3" json:"permission_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConnRolePermissionRequest) Reset() {
	*x = UpdateConnRolePermissionRequest{}
	mi := &file_connectRolePermission_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConnRolePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConnRolePermissionRequest) ProtoMessage() {}

func (x *UpdateConnRolePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConnRolePermissionRequest.ProtoReflect.Descriptor instead.
func (*UpdateConnRolePermissionRequest) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateConnRolePermissionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateConnRolePermissionRequest) GetRoleIds() []string {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *UpdateConnRolePermissionRequest) GetPermissionIds() []string {
	if x != nil {
		return x.PermissionIds
	}
	return nil
}

type UpdateConnRolePermissionResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	StatusCode         int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Message            string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ConnRolePermission *ConnRolePermission    `protobuf:"bytes,3,opt,name=conn_role_permission,json=connRolePermission,proto3" json:"conn_role_permission,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UpdateConnRolePermissionResponse) Reset() {
	*x = UpdateConnRolePermissionResponse{}
	mi := &file_connectRolePermission_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConnRolePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConnRolePermissionResponse) ProtoMessage() {}

func (x *UpdateConnRolePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConnRolePermissionResponse.ProtoReflect.Descriptor instead.
func (*UpdateConnRolePermissionResponse) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateConnRolePermissionResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *UpdateConnRolePermissionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateConnRolePermissionResponse) GetConnRolePermission() *ConnRolePermission {
	if x != nil {
		return x.ConnRolePermission
	}
	return nil
}

type DeleteConnRolePermissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConnRolePermissionRequest) Reset() {
	*x = DeleteConnRolePermissionRequest{}
	mi := &file_connectRolePermission_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConnRolePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnRolePermissionRequest) ProtoMessage() {}

func (x *DeleteConnRolePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnRolePermissionRequest.ProtoReflect.Descriptor instead.
func (*DeleteConnRolePermissionRequest) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteConnRolePermissionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteConnRolePermissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteConnRolePermissionResponse) Reset() {
	*x = DeleteConnRolePermissionResponse{}
	mi := &file_connectRolePermission_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteConnRolePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnRolePermissionResponse) ProtoMessage() {}

func (x *DeleteConnRolePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connectRolePermission_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnRolePermissionResponse.ProtoReflect.Descriptor instead.
func (*DeleteConnRolePermissionResponse) Descriptor() ([]byte, []int) {
	return file_connectRolePermission_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteConnRolePermissionResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *DeleteConnRolePermissionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_connectRolePermission_proto protoreflect.FileDescriptor

var file_connectRolePermission_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0xb3, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x50, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x0e, 0x43, 0x6f, 0x6e,
	0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xba, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xac,
	0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x2c, 0x0a, 0x12, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x6f, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xff, 0x01,
	0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x11, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2f,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x22,
	0x63, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x21,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0xa7, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x48, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x20, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xa8, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x48, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x1f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22,
	0xa7, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f,
	0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x48, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x1f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x20,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x97, 0x04, 0x0a, 0x1c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x1b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x61, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70,
	0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x52,
	0x6f, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x69, 0x73, 0x61, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2f, 0x61, 0x61,
	0x61, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_connectRolePermission_proto_rawDescOnce sync.Once
	file_connectRolePermission_proto_rawDescData []byte
)

func file_connectRolePermission_proto_rawDescGZIP() []byte {
	file_connectRolePermission_proto_rawDescOnce.Do(func() {
		file_connectRolePermission_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_connectRolePermission_proto_rawDesc), len(file_connectRolePermission_proto_rawDesc)))
	})
	return file_connectRolePermission_proto_rawDescData
}

var file_connectRolePermission_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_connectRolePermission_proto_goTypes = []any{
	(*ConnUser)(nil),                          // 0: pb.ConnUser
	(*ConnRole)(nil),                          // 1: pb.ConnRole
	(*ConnPermission)(nil),                    // 2: pb.ConnPermission
	(*ConnPermissionOnRole)(nil),              // 3: pb.ConnPermissionOnRole
	(*ConnUserRole)(nil),                      // 4: pb.ConnUserRole
	(*ConnRolePermission)(nil),                // 5: pb.ConnRolePermission
	(*CreateConnRolePermissionRequest)(nil),   // 6: pb.CreateConnRolePermissionRequest
	(*CreateConnRolePermissionResponse)(nil),  // 7: pb.CreateConnRolePermissionResponse
	(*GetConnRolePermissionallRequest)(nil),   // 8: pb.GetConnRolePermissionallRequest
	(*GetConnRolePermissionallResponse)(nil),  // 9: pb.GetConnRolePermissionallResponse
	(*GetConnRolePermissionByIdRequest)(nil),  // 10: pb.GetConnRolePermissionByIdRequest
	(*GetConnRolePermissionByIdResponse)(nil), // 11: pb.GetConnRolePermissionByIdResponse
	(*UpdateConnRolePermissionRequest)(nil),   // 12: pb.UpdateConnRolePermissionRequest
	(*UpdateConnRolePermissionResponse)(nil),  // 13: pb.UpdateConnRolePermissionResponse
	(*DeleteConnRolePermissionRequest)(nil),   // 14: pb.DeleteConnRolePermissionRequest
	(*DeleteConnRolePermissionResponse)(nil),  // 15: pb.DeleteConnRolePermissionResponse
}
var file_connectRolePermission_proto_depIdxs = []int32{
	2,  // 0: pb.ConnPermissionOnRole.permission:type_name -> pb.ConnPermission
	0,  // 1: pb.ConnUserRole.user:type_name -> pb.ConnUser
	1,  // 2: pb.ConnRolePermission.role:type_name -> pb.ConnRole
	3,  // 3: pb.ConnRolePermission.permission_on_roles:type_name -> pb.ConnPermissionOnRole
	4,  // 4: pb.ConnRolePermission.user_roles:type_name -> pb.ConnUserRole
	5,  // 5: pb.CreateConnRolePermissionResponse.conn_role_permission:type_name -> pb.ConnRolePermission
	5,  // 6: pb.GetConnRolePermissionallResponse.conn_role_permission:type_name -> pb.ConnRolePermission
	5,  // 7: pb.GetConnRolePermissionByIdResponse.conn_role_permission:type_name -> pb.ConnRolePermission
	5,  // 8: pb.UpdateConnRolePermissionResponse.conn_role_permission:type_name -> pb.ConnRolePermission
	6,  // 9: pb.ConnectRolePermissionService.CreateConnectRolePermission:input_type -> pb.CreateConnRolePermissionRequest
	8,  // 10: pb.ConnectRolePermissionService.GetAllRolePermission:input_type -> pb.GetConnRolePermissionallRequest
	10, // 11: pb.ConnectRolePermissionService.GetRolePermissionById:input_type -> pb.GetConnRolePermissionByIdRequest
	12, // 12: pb.ConnectRolePermissionService.UpdateRolePermission:input_type -> pb.UpdateConnRolePermissionRequest
	14, // 13: pb.ConnectRolePermissionService.DeleteRolePermission:input_type -> pb.DeleteConnRolePermissionRequest
	7,  // 14: pb.ConnectRolePermissionService.CreateConnectRolePermission:output_type -> pb.CreateConnRolePermissionResponse
	9,  // 15: pb.ConnectRolePermissionService.GetAllRolePermission:output_type -> pb.GetConnRolePermissionallResponse
	11, // 16: pb.ConnectRolePermissionService.GetRolePermissionById:output_type -> pb.GetConnRolePermissionByIdResponse
	13, // 17: pb.ConnectRolePermissionService.UpdateRolePermission:output_type -> pb.UpdateConnRolePermissionResponse
	15, // 18: pb.ConnectRolePermissionService.DeleteRolePermission:output_type -> pb.DeleteConnRolePermissionResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_connectRolePermission_proto_init() }
func file_connectRolePermission_proto_init() {
	if File_connectRolePermission_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_connectRolePermission_proto_rawDesc), len(file_connectRolePermission_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_connectRolePermission_proto_goTypes,
		DependencyIndexes: file_connectRolePermission_proto_depIdxs,
		MessageInfos:      file_connectRolePermission_proto_msgTypes,
	}.Build()
	File_connectRolePermission_proto = out.File
	file_connectRolePermission_proto_goTypes = nil
	file_connectRolePermission_proto_depIdxs = nil
}
