basePath: /api
definitions:
  github_com_Kisanlink_aaa-service_entities_models.Action:
    properties:
      category:
        description: e.g., "user", "role", "system", "api", "database"
        type: string
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  github_com_Kisanlink_aaa-service_entities_models.Address:
    properties:
      country:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      district:
        type: string
      full_address:
        type: string
      house:
        type: string
      id:
        type: string
      landmark:
        type: string
      pincode:
        type: string
      post_office:
        type: string
      state:
        type: string
      street:
        type: string
      subdistrict:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      vtc:
        description: Village/Town/City
        type: string
    type: object
  github_com_Kisanlink_aaa-service_entities_models.AuditLog:
    properties:
      action:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      details:
        additionalProperties: true
        type: object
      id:
        type: string
      ip_address:
        type: string
      message:
        type: string
      resource:
        $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.Resource'
      resource_id:
        type: string
      resource_type:
        description: e.g., "aaa/user", "aaa/role"
        type: string
      status:
        description: success, failure, warning
        type: string
      timestamp:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.User'
        description: Relationships
      user_agent:
        type: string
      user_id:
        type: string
    type: object
  github_com_Kisanlink_aaa-service_entities_models.Contact:
    properties:
      address:
        allOf:
        - $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.Address'
        description: Relationships
      address_id:
        type: string
      country_code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      email_hash:
        type: string
      id:
        type: string
      mobile_number:
        type: integer
      share_code:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      user_id:
        type: string
    type: object
  github_com_Kisanlink_aaa-service_entities_models.Permission:
    properties:
      action:
        $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.Action'
      action_id:
        description: Which action this permission allows
        type: string
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      resource:
        allOf:
        - $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.Resource'
        description: Relationships
      resource_id:
        description: Which resource this permission applies to
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  github_com_Kisanlink_aaa-service_entities_models.Resource:
    properties:
      children:
        items:
          $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.Resource'
        type: array
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      owner:
        $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.User'
      owner_id:
        description: Owner user ID
        type: string
      parent:
        allOf:
        - $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.Resource'
        description: Relationships
      parent_id:
        description: For hierarchical resources
        type: string
      type:
        description: e.g., "aaa/user", "aaa/role", "aaa/permission", etc.
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  github_com_Kisanlink_aaa-service_entities_models.Role:
    properties:
      children:
        items:
          $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.Role'
        type: array
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      parent:
        allOf:
        - $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.Role'
        description: Relationships
      parent_id:
        description: For hierarchical roles
        type: string
      permissions:
        items:
          $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.Permission'
        type: array
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  github_com_Kisanlink_aaa-service_entities_models.User:
    properties:
      contacts:
        items:
          $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.Contact'
        type: array
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      id:
        type: string
      is_validated:
        type: boolean
      password:
        maxLength: 128
        minLength: 8
        type: string
      profile:
        allOf:
        - $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.UserProfile'
        description: Relationships
      roles:
        items:
          $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.UserRole'
        type: array
      status:
        description: |-
          Status represents the current state of the user account
          Possible values:
          - "pending": Initial state when user is created but not validated
          - "active": User is validated and can access all features
          - "suspended": User access is temporarily suspended
          - "blocked": User access is permanently blocked
        type: string
      tokens:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  github_com_Kisanlink_aaa-service_entities_models.UserProfile:
    properties:
      aadhaar_number:
        type: string
      address:
        allOf:
        - $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.Address'
        description: Relationships
      address_id:
        type: string
      care_of:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      date_of_birth:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      email_hash:
        type: string
      id:
        type: string
      message:
        type: string
      name:
        type: string
      photo:
        type: string
      share_code:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      user_id:
        type: string
      year_of_birth:
        type: string
    type: object
  github_com_Kisanlink_aaa-service_entities_models.UserRole:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      deleted_by:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      role:
        $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.Role'
      roleID:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.User'
        description: Relationships
      userID:
        type: string
    type: object
  github_com_Kisanlink_aaa-service_entities_requests_addresses.CreateAddressRequest:
    properties:
      body: {}
      context:
        additionalProperties: {}
        type: object
      country:
        maxLength: 255
        type: string
      district:
        maxLength: 255
        type: string
      full_address:
        maxLength: 1000
        type: string
      headers:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      house:
        maxLength: 255
        type: string
      landmark:
        maxLength: 255
        type: string
      operation:
        type: string
      pincode:
        type: string
      post_office:
        maxLength: 255
        type: string
      protocol:
        type: string
      request_id:
        type: string
      state:
        maxLength: 255
        type: string
      street:
        maxLength: 255
        type: string
      subdistrict:
        maxLength: 255
        type: string
      type:
        type: string
      user_id:
        minLength: 1
        type: string
      version:
        type: string
      vtc:
        maxLength: 255
        type: string
    required:
    - user_id
    type: object
  github_com_Kisanlink_aaa-service_entities_requests_addresses.UpdateAddressRequest:
    properties:
      body: {}
      context:
        additionalProperties: {}
        type: object
      country:
        maxLength: 255
        type: string
      district:
        maxLength: 255
        type: string
      full_address:
        maxLength: 1000
        type: string
      headers:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      house:
        maxLength: 255
        type: string
      id:
        minLength: 1
        type: string
      landmark:
        maxLength: 255
        type: string
      operation:
        type: string
      pincode:
        type: string
      post_office:
        maxLength: 255
        type: string
      protocol:
        type: string
      request_id:
        type: string
      state:
        maxLength: 255
        type: string
      street:
        maxLength: 255
        type: string
      subdistrict:
        maxLength: 255
        type: string
      type:
        type: string
      version:
        type: string
      vtc:
        maxLength: 255
        type: string
    required:
    - id
    type: object
  github_com_Kisanlink_aaa-service_entities_requests_roles.CreateRoleRequest:
    properties:
      body: {}
      context:
        additionalProperties: {}
        type: object
      description:
        maxLength: 500
        type: string
      headers:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      name:
        maxLength: 100
        minLength: 2
        type: string
      operation:
        type: string
      permissions:
        items:
          type: string
        type: array
      protocol:
        type: string
      request_id:
        type: string
      type:
        type: string
      version:
        type: string
    required:
    - name
    type: object
  github_com_Kisanlink_aaa-service_entities_requests_roles.UpdateRoleRequest:
    properties:
      body: {}
      context:
        additionalProperties: {}
        type: object
      description:
        maxLength: 500
        type: string
      headers:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      name:
        maxLength: 100
        minLength: 2
        type: string
      operation:
        type: string
      permissions:
        items:
          type: string
        type: array
      protocol:
        type: string
      request_id:
        type: string
      role_id:
        type: string
      type:
        type: string
      version:
        type: string
    required:
    - role_id
    type: object
  github_com_Kisanlink_aaa-service_entities_requests_users.CreateUserRequest:
    properties:
      aadhaar_number:
        type: string
      care_of:
        type: string
      country_code:
        type: string
      date_of_birth:
        type: string
      mobile_number:
        type: integer
      name:
        type: string
      password:
        maxLength: 128
        minLength: 8
        type: string
      username:
        type: string
      year_of_birth:
        type: string
    required:
    - mobile_number
    - password
    - username
    type: object
  github_com_Kisanlink_aaa-service_entities_requests_users.UpdateUserRequest:
    properties:
      care_of:
        type: string
      country_code:
        type: string
      date_of_birth:
        type: string
      email_hash:
        type: string
      message:
        type: string
      mobile_number:
        type: integer
      name:
        type: string
      photo:
        type: string
      share_code:
        type: string
      status:
        type: string
      tokens:
        type: integer
      year_of_birth:
        type: string
    type: object
  github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse:
    properties:
      code:
        type: integer
      details:
        additionalProperties: true
        type: object
      error:
        type: string
      message:
        type: string
      request_id:
        type: string
      timestamp:
        type: string
    type: object
  github_com_Kisanlink_aaa-service_entities_responses_users.AddressResponse:
    properties:
      country:
        type: string
      created_at:
        type: string
      district:
        type: string
      full_address:
        type: string
      house:
        type: string
      id:
        type: string
      landmark:
        type: string
      pincode:
        type: string
      post_office:
        type: string
      state:
        type: string
      street:
        type: string
      subdistrict:
        type: string
      updated_at:
        type: string
      vtc:
        type: string
    type: object
  github_com_Kisanlink_aaa-service_entities_responses_users.RoleDetail:
    properties:
      assigned_at:
        type: string
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
    type: object
  github_com_Kisanlink_aaa-service_entities_responses_users.UserResponse:
    properties:
      aadhaar_number:
        type: string
      address:
        $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses_users.AddressResponse'
      care_of:
        type: string
      country_code:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      email_hash:
        type: string
      id:
        type: string
      is_validated:
        type: boolean
      message:
        type: string
      mobile_number:
        type: integer
      name:
        type: string
      photo:
        type: string
      roles:
        items:
          $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses_users.RoleDetail'
        type: array
      share_code:
        type: string
      status:
        type: string
      tokens:
        type: integer
      updated_at:
        type: string
      username:
        type: string
      year_of_birth:
        type: string
    type: object
  handlers_permissions.CreatePermissionRequest:
    properties:
      actions:
        items:
          type: string
        type: array
      effect:
        type: string
      resource:
        type: string
    required:
    - actions
    - effect
    - resource
    type: object
  handlers_permissions.UpdatePermissionRequest:
    properties:
      actions:
        items:
          type: string
        type: array
      effect:
        type: string
      id:
        type: string
      resource:
        type: string
    required:
    - id
    type: object
  services.AuditQueryResult:
    properties:
      logs:
        items:
          $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.AuditLog'
        type: array
      page:
        type: integer
      per_page:
        type: integer
      total_count:
        type: integer
    type: object
  services.LoginRequest:
    properties:
      mfa_code:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  services.LoginResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      permissions:
        items:
          type: string
        type: array
      refresh_token:
        type: string
      token_type:
        type: string
      user:
        $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_models.User'
    type: object
  services.Permission:
    properties:
      action:
        type: string
      resource:
        type: string
      resource_id:
        type: string
      user_id:
        type: string
    type: object
  services.PermissionResult:
    properties:
      allowed:
        type: boolean
      permissions:
        items:
          type: string
        type: array
      reason:
        type: string
    type: object
  services.RegisterRequest:
    properties:
      email:
        type: string
      full_name:
        maxLength: 100
        minLength: 1
        type: string
      password:
        minLength: 8
        type: string
      role_ids:
        items:
          type: string
        type: array
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - full_name
    - password
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: Authentication, Authorization, and Accounting Service with SpiceDB
    integration
  title: AAA Service API
  version: "2.0"
paths:
  /api/v1/addresses:
    post:
      consumes:
      - application/json
      description: Create a new address for a user
      parameters:
      - description: Address creation data
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_requests_addresses.CreateAddressRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new address
      tags:
      - addresses
  /api/v1/addresses/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an address by its unique identifier
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete address
      tags:
      - addresses
    get:
      consumes:
      - application/json
      description: Retrieve an address by its unique identifier
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get address by ID
      tags:
      - addresses
    put:
      consumes:
      - application/json
      description: Update an existing address
      parameters:
      - description: Address ID
        in: path
        name: id
        required: true
        type: string
      - description: Address update data
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_requests_addresses.UpdateAddressRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update address
      tags:
      - addresses
  /api/v1/addresses/search:
    get:
      consumes:
      - application/json
      description: Search for addresses based on query parameters
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      - default: 10
        description: Number of addresses to return
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of addresses to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Search addresses
      tags:
      - addresses
  /api/v1/roles:
    get:
      consumes:
      - application/json
      description: Get a paginated list of roles
      parameters:
      - default: 10
        description: Number of roles to return
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of roles to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List roles
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: Create a new role with the provided information
      parameters:
      - description: Role creation data
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_requests_roles.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
      summary: Create a new role
      tags:
      - roles
  /api/v1/roles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a role by its unique identifier
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
      summary: Delete role
      tags:
      - roles
    get:
      consumes:
      - application/json
      description: Retrieve a role by its unique identifier
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
      summary: Get role by ID
      tags:
      - roles
    put:
      consumes:
      - application/json
      description: Update an existing role's information
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      - description: Role update data
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_requests_roles.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
      summary: Update role
      tags:
      - roles
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get a paginated list of users
      parameters:
      - default: 10
        description: Number of users to return
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of users to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User creation data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_requests_users.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses_users.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
      summary: Create a new user
      tags:
      - users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their unique identifier
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieve a user by their unique identifier
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses_users.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update an existing user's information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User update data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_requests_users.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
      summary: Update user
      tags:
      - users
  /api/v1/users/{id}/roles/{roleId}:
    delete:
      consumes:
      - application/json
      description: Remove a role from a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Role ID
        in: path
        name: roleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_Kisanlink_aaa-service_entities_responses.ErrorResponse'
      summary: Remove role from user
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Assign a role to a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Role ID
        in: path
        name: roleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Assign role to user
      tags:
      - users
  /api/v1/users/{id}/validate:
    post:
      consumes:
      - application/json
      description: Validate a user account
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Validate user
      tags:
      - users
  /api/v1/users/search:
    get:
      consumes:
      - application/json
      description: Search for users based on query parameters
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      - default: 10
        description: Number of users to return
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of users to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Search users
      tags:
      - users
  /api/v2/admin/audit:
    get:
      consumes:
      - application/json
      description: Retrieve audit logs with optional filtering
      parameters:
      - description: Filter by user ID
        in: query
        name: user_id
        type: string
      - description: Filter by action type
        in: query
        name: action
        type: string
      - description: Filter by resource type
        in: query
        name: resource
        type: string
      - description: Filter by start date (RFC3339)
        in: query
        name: start_date
        type: string
      - description: Filter by end date (RFC3339)
        in: query
        name: end_date
        type: string
      - default: 100
        description: Number of logs to return
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of logs to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Audit logs
      tags:
      - admin
  /api/v2/admin/health/detailed:
    get:
      consumes:
      - application/json
      description: Get detailed health status of all system components
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Detailed health check
      tags:
      - admin
  /api/v2/admin/maintenance:
    get:
      consumes:
      - application/json
      description: Get current maintenance mode status and configuration
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get maintenance status
      tags:
      - admin
    post:
      consumes:
      - application/json
      description: Enable or disable system maintenance mode
      parameters:
      - description: Maintenance mode configuration
        in: body
        name: maintenance
        required: true
        schema:
          properties:
            allow_admin:
              type: boolean
            allow_read:
              type: boolean
            enabled:
              type: boolean
            end_time:
              type: string
            message:
              type: string
            reason:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Toggle maintenance mode
      tags:
      - admin
  /api/v2/admin/maintenance/message:
    patch:
      consumes:
      - application/json
      description: Update the maintenance mode message
      parameters:
      - description: New maintenance message
        in: body
        name: message
        required: true
        schema:
          properties:
            message:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update maintenance message
      tags:
      - admin
  /api/v2/admin/metrics:
    get:
      consumes:
      - application/json
      description: Get comprehensive system and application metrics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: System metrics
      tags:
      - admin
  /api/v2/admin/system:
    get:
      consumes:
      - application/json
      description: Get comprehensive system information including service details,
        runtime info, and configuration
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: System information
      tags:
      - admin
  /api/v2/audit/logs:
    get:
      consumes:
      - application/json
      description: Retrieve audit logs with filtering and pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 50
        description: Items per page
        in: query
        name: per_page
        type: integer
      - description: Filter by user ID
        in: query
        name: user_id
        type: string
      - description: Filter by action
        in: query
        name: action
        type: string
      - description: Filter by resource type
        in: query
        name: resource
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.AuditQueryResult'
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get audit logs (V2)
      tags:
      - audit
  /api/v2/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user with username and password and MFA
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/services.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: User login (V2)
      tags:
      - authentication
  /api/v2/auth/logout:
    post:
      consumes:
      - application/json
      description: Logout user and invalidate tokens
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: User logout (V2)
      tags:
      - authentication
  /api/v2/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh access token using refresh token
      parameters:
      - description: Refresh token
        in: body
        name: token
        required: true
        schema:
          properties:
            refresh_token:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Refresh access token (V2)
      tags:
      - authentication
  /api/v2/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user account with enhanced validation
      parameters:
      - description: Registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/services.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: User registration (V2)
      tags:
      - authentication
  /api/v2/authz/check:
    post:
      consumes:
      - application/json
      description: Check if a user has permission to perform an action on a resource
      parameters:
      - description: Permission check data
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/services.Permission'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.PermissionResult'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Check user permission (V2)
      tags:
      - authorization
  /api/v2/health:
    get:
      consumes:
      - application/json
      description: Basic health check for the AAA service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Health check (V2)
      tags:
      - health
  /api/v2/permissions:
    get:
      consumes:
      - application/json
      description: Get a paginated list of permissions
      parameters:
      - default: 10
        description: Number of permissions to return
        in: query
        name: limit
        type: integer
      - default: 0
        description: Number of permissions to skip
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List permissions
      tags:
      - permissions
    post:
      consumes:
      - application/json
      description: Create a new permission with resource, effect, and actions
      parameters:
      - description: Permission creation data
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/handlers_permissions.CreatePermissionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new permission
      tags:
      - permissions
  /api/v2/permissions/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a permission by its unique identifier
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete permission
      tags:
      - permissions
    get:
      consumes:
      - application/json
      description: Retrieve a permission by its unique identifier
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get permission by ID
      tags:
      - permissions
    put:
      consumes:
      - application/json
      description: Update an existing permission
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: string
      - description: Permission update data
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/handlers_permissions.UpdatePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update permission
      tags:
      - permissions
  /api/v2/permissions/evaluate:
    post:
      consumes:
      - application/json
      description: Check if a user has permission to perform an action on a resource
      parameters:
      - description: Permission evaluation data
        in: body
        name: evaluation
        required: true
        schema:
          properties:
            action:
              type: string
            resource:
              type: string
            user_id:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Evaluate permission
      tags:
      - permissions
  /api/v2/permissions/temporary:
    post:
      consumes:
      - application/json
      description: Grant temporary permission to a user for specific actions on a
        resource
      parameters:
      - description: Temporary permission data
        in: body
        name: permission
        required: true
        schema:
          properties:
            actions:
              items:
                type: string
              type: array
            expires_at:
              type: string
            resource:
              type: string
            user_id:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Grant temporary permission
      tags:
      - permissions
  /api/v2/users:
    get:
      consumes:
      - application/json
      description: Get a list of all users with pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: List all users (V2)
      tags:
      - users
  /api/v2/users/{id}:
    get:
      consumes:
      - application/json
      description: Get detailed information about a specific user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Get user by ID (V2)
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User update data
        in: body
        name: user
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Update user (V2)
      tags:
      - users
  /health:
    get:
      consumes:
      - application/json
      description: Get basic service health status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Basic health check
      tags:
      - health
  /live:
    get:
      consumes:
      - application/json
      description: Check if service is alive
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Liveness check
      tags:
      - health
  /ready:
    get:
      consumes:
      - application/json
      description: Check if service is ready to accept requests
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "503":
          description: Service Unavailable
          schema:
            additionalProperties: true
            type: object
      summary: Readiness check
      tags:
      - health
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
